{"version":3,"sources":["Rest/RestPlayerController.ts","Components/CreatePlayer/CreatePlayerComponent.tsx","Rest/KeepAlivePlayer.ts","Rest/RoomSearchController.ts","Components/FindRoom/RoomPreviewComponent.tsx","Components/FindRoom/FindRoomComponent.tsx","Rest/GameController.ts","Rest/RoomPollController.ts","Components/Lobby/LobbyCompontent.tsx","Components/InGame/PlayerInfoComponent.tsx","Components/InGame/GameInfoComponent.tsx","Components/InGame/SingleCellComponent.tsx","Components/InGame/InGameComponent.tsx","App.tsx","index.tsx"],"names":["RestPlayerController","urlBase","currentPlayerInfo","this","name","a","fetch","encodeURIComponent","method","then","res","ok","Promise","statusText","text","reject","json","CreatePlayerComponent","props","playerController","React","useRef","baseUrl","useState","setName","waitingForServer","setWaitingForServer","errorText","setErrorText","handlePlayerCreateClicked","length","current","tryCreatePlayer","p","onPlayerCreated","catch","reason","toString","className","style","fontSize","type","value","onChange","e","target","disabled","onKeyPress","event","key","onClick","opacity","player","timeoutHandle","window","setTimeout","sendKeepAlive","id","secret","clearTimeout","RoomSearchController","handlers","handler","push","startUpdateLoop","pollRooms","console","status","error","rooms","forEach","room","roomName","RoomPreviewComponent","descriptionString","rules","simultaneous","boardSize","tryJoinRoom","players","maxPlayerCount","FindRoomComponent","setRoomName","setRooms","roomPollControl","onJoinedRoom","err","alert","ToString","useEffect","bindHandler","destroy","tryCreateRoom","map","GameController","currentGameState","pollRoom","state","gameState","x","y","result","success","RoomPollController","headers","body","JSON","stringify","LobbyComponent","setRoom","isHost","getChecked","getValue","undefined","game","onGameStateChanged","ruleItems","hasOwnProperty","checked","rule","elem","valueAsNumber","getChangedValue","tryChangeRules","tryStartGame","PlayerInfoComponent","isMe","gradientColors","index","captures","GameInfoComponent","gsc","textAlign","myTurn","i","captureCounts","SingleCellComponent","hover","setHover","displayCell","myPlayerIndex","isPendingMove","isIllegal","transform","d","fill","stroke","vectorEffect","cx","cy","r","onMouseEnter","onMouseLeave","from","to","InGameComponent","gameController","setGameState","playerIndex","findIndex","boardMarkings","x1","x2","y1","y2","strokeWidth","starPoint","dx","dy","Math","floor","gradients","offset","stopColor","handleCellClicked","tryPlayMove","viewBox","cells","col","c","cell","illegalMoves","m","previewMove","location","href","indexOf","App","playerKeepAlive","setPlayer","gameStateController","setGameStateController","contentElement","KeepAlivePlayer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e03bfea.chunk.js","sourcesContent":["import IPlayer from '../../../go-common/IPlayer';\r\n\r\nexport default class RestPlayerController {\r\n\r\n    public currentPlayerInfo: IPlayer | null;\r\n\r\n    constructor(private urlBase: string) {\r\n        this.currentPlayerInfo = null;\r\n    }\r\n\r\n    async tryCreatePlayer(name: string): Promise<IPlayer> {\r\n        return fetch(`${this.urlBase}/player?name=${encodeURIComponent(name)}`, { method: 'PUT' })\r\n        .then(async (res) => {\r\n            if(!res.ok) {\r\n                return Promise.reject(res.statusText + ': ' + await res.text());\r\n            }\r\n            return (await res.json()) as IPlayer;\r\n        });\r\n    }\r\n}","import React from \"react\";\r\nimport IPlayer from \"../../../../go-common/IPlayer\";\r\nimport RestPlayerController from \"../../Rest/RestPlayerController\";\r\nimport './CreatePlayerComponent.css';\r\n\r\nexport default function CreatePlayerComponent(props: { baseUrl: string, onPlayerCreated: (player: IPlayer) => void }) {\r\n    const playerController = React.useRef(new RestPlayerController(props.baseUrl));\r\n    const [name, setName] = React.useState(\"\");\r\n    const [waitingForServer, setWaitingForServer] = React.useState(false);\r\n    const [errorText, setErrorText] = React.useState(\"\");\r\n\r\n    function handlePlayerCreateClicked() {\r\n        if (name.length === 0) {\r\n            return;\r\n        }\r\n        setWaitingForServer(true);\r\n        playerController.current.tryCreatePlayer(name).then(p => {\r\n            setWaitingForServer(false);\r\n            props.onPlayerCreated(p);\r\n        }).catch(reason => \r\n        {\r\n            setWaitingForServer(false);\r\n            setErrorText(reason?.toString());\r\n        });\r\n    }\r\n    return (\r\n        <div className='flex col align-stretch justify-center player-create-component full-height'>\r\n            <div style={{ fontSize: '200%' }}>Enter a Player Name:</div>\r\n            <div className='flex flex-row form-container'>\r\n                <input className='player-name-input flex-grow' type='text' value={name} onChange={e => setName(e.target.value)} disabled={waitingForServer} onKeyPress={event => { if(event.key === 'Enter') handlePlayerCreateClicked(); }}/>\r\n                <button className='submitButton' onClick={handlePlayerCreateClicked} disabled={waitingForServer}>Go</button>\r\n            </div>\r\n            {errorText === '' ? <></> : <div className='errorText'>{errorText}</div>}\r\n            <div className='blinker' style={{ opacity: waitingForServer ? 1 : 0 }}>\r\n                <div />\r\n                <div />\r\n                <div />\r\n            </div>\r\n        </div>\r\n    );\r\n}","import IPlayer from '../../../go-common/IPlayer';\r\n\r\nconst POLL_INTERVAL = 30_000;\r\n\r\nexport default class RestPlayerController {\r\n    private timeoutHandle: number;\r\n\r\n    constructor(private urlBase: string, public player: IPlayer) {\r\n        this.timeoutHandle = window.setTimeout(() => this.sendKeepAlive(), POLL_INTERVAL);\r\n    }\r\n\r\n    sendKeepAlive() {\r\n        fetch(`${this.urlBase}/player/${this.player.id}?secret=${this.player.secret}`);\r\n        this.timeoutHandle = window.setTimeout(() => this.sendKeepAlive(), POLL_INTERVAL);\r\n    }\r\n    \r\n    destroy() {\r\n        clearTimeout(this.timeoutHandle);\r\n        fetch(`${this.urlBase}/player/${this.player.id}?secret=${this.player.secret}`, { method: 'DELETE' });\r\n    }\r\n}","import IPlayer from '../../../go-common/IPlayer';\r\nimport IRoom from '../../../go-common/IRoom';\r\n\r\nconst POLL_INTERVAL = 1000;\r\n\r\nexport default class RoomSearchController {\r\n\r\n    handlers: ((rooms: IRoom[]) => void)[];\r\n    timeoutHandle: number;\r\n\r\n    constructor(private urlBase: string, public player: IPlayer) {\r\n        this.handlers = [];\r\n        this.timeoutHandle= -1;\r\n    }\r\n\r\n    bindHandler(handler: (rooms: IRoom[]) => void) {\r\n        this.handlers.push(handler);\r\n        if(this.handlers.length === 1){\r\n            this.startUpdateLoop();\r\n        }\r\n    }\r\n\r\n    startUpdateLoop() {\r\n        this.pollRooms();\r\n    }\r\n\r\n    pollRooms(): void {\r\n        fetch(`${this.urlBase}/room`, { method: 'GET' })\r\n        .then(async (res) => {\r\n            if(!res.ok) {\r\n                console.error('Bad response during room poll: ' + res.status + ' ' + await res.text());\r\n            }\r\n            const rooms = (await res.json()) as IRoom[];\r\n            this.handlers.forEach((handler) => handler(rooms));\r\n            \r\n            this.timeoutHandle = window.setTimeout(()=>this.startUpdateLoop(), POLL_INTERVAL);\r\n        });\r\n    }\r\n\r\n    async tryJoinRoom(room: IRoom, player: IPlayer): Promise<IRoom> {\r\n        return fetch(`${this.urlBase}/room/${room.id}/join?playerId=${player.id}&playerSecret=${encodeURIComponent(player.secret??'')}`, { method: 'POST'})\r\n            .then(async res => {\r\n                if(!res.ok) {\r\n                    const errorText = 'Bad response during join room: ' + res.status + ' ' + await res.text();\r\n                    console.error(errorText);\r\n                    return Promise.reject(errorText);\r\n                }\r\n                return (await res.json()) as IRoom;\r\n            });\r\n    }\r\n\r\n    async tryCreateRoom(roomName: string, player: IPlayer): Promise<IRoom> {\r\n        return fetch(`${this.urlBase}/room?name=${encodeURIComponent(roomName)}&playerId=${player.id}&playerSecret=${encodeURIComponent(player.secret??'')}`, { method: 'PUT'})\r\n            .then(async res => {\r\n                if(!res.ok) {\r\n                    const errorText = 'Bad response during create room: ' + res.status + ' ' + await res.text();\r\n                    console.error(errorText);\r\n                    return Promise.reject(errorText);\r\n                }\r\n                return (await res.json()) as IRoom;\r\n            });\r\n    }\r\n\r\n    destroy() {\r\n        clearTimeout(this.timeoutHandle);\r\n    }\r\n}","import IPlayer from \"../../../../go-common/IPlayer\";\r\nimport IRoom from \"../../../../go-common/IRoom\";\r\nimport './RoomPreviewComponent.css';\r\n\r\nexport default function RoomPreviewComponent(props: { player: IPlayer, room: IRoom, tryJoinRoom: (room: IRoom)=>void }) {\r\n    let descriptionString = '';\r\n    const rules = props.room.rules;\r\n    if(rules.simultaneous) descriptionString += 'Simultaneous, ';\r\n    else descriptionString += 'Standard, '\r\n    descriptionString += rules.boardSize + 'x' + rules.boardSize + ', ';\r\n    return <div className='room-preview'>\r\n        <div className='flex row justify-space-between'>\r\n            <div>{props.room.name}</div>\r\n            <button onClick={()=>props.tryJoinRoom(props.room)}>Join</button>\r\n        </div>\r\n        <div>Players: {props.room.players.length}/{props.room.rules.maxPlayerCount}</div>\r\n        <div>{descriptionString}</div>\r\n    </div>;\r\n}","import * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport IPlayer from '../../../../go-common/IPlayer';\r\nimport IRoom from '../../../../go-common/IRoom';\r\nimport RoomSearchController from '../../Rest/RoomSearchController';\r\nimport './FindRoomComponent.css';\r\nimport RoomPreviewComponent from './RoomPreviewComponent';\r\n\r\nexport default function FindRoomComponent(props: {baseUrl: string, player: IPlayer, onJoinedRoom: (room: IRoom) => void}) {\r\n    const [roomName, setRoomName] = React.useState('');\r\n    const [waitingForServer, setWaitingForServer] = React.useState(false);\r\n    const [rooms, setRooms] = React.useState<IRoom[]>([]);\r\n    const roomPollControl = React.useRef<null | RoomSearchController>(null);\r\n\r\n    useEffect(() => {\r\n        if (roomPollControl.current === null) {\r\n            roomPollControl.current = new RoomSearchController(props.baseUrl, props.player);\r\n            roomPollControl.current.bindHandler(setRooms);\r\n        }\r\n        return () => { roomPollControl.current?.destroy(); roomPollControl.current = null; }\r\n    }, []);\r\n\r\n    function tryJoinRoom(room: IRoom){\r\n        setWaitingForServer(true);\r\n        (roomPollControl.current as RoomSearchController).tryJoinRoom(room, props.player)\r\n            .then(props.onJoinedRoom)\r\n            .catch(err => { setWaitingForServer(false);alert('Failed: ' + err?.ToString()); });\r\n    }\r\n\r\n    function tryCreateRoom(){\r\n        setWaitingForServer(true);\r\n        (roomPollControl.current as RoomSearchController).tryCreateRoom(roomName, props.player)\r\n            .then(props.onJoinedRoom)\r\n            .catch(err => { setWaitingForServer(false); alert('Failed: ' + err?.ToString()); });\r\n    }\r\n\r\n    return (\r\n        <div className='flex col align-stretch find-room-component full-height'>\r\n            <div>Create a Room: </div>\r\n            <div className='flex flex-row form-container'>\r\n                <input className='room-name-input flex-grow' type='text' value={roomName} onChange={e => setRoomName(e.target.value)} disabled={waitingForServer}/>\r\n                <button className='submitButton' disabled={waitingForServer} onClick={tryCreateRoom}>Go</button>\r\n            </div>\r\n            <div className='blinker' style={{ opacity: waitingForServer ? 1 : 0 }}>\r\n                <div />\r\n                <div />\r\n                <div />\r\n            </div>\r\n            <div>Or, Join a Room: </div>\r\n            {rooms.map(room => <RoomPreviewComponent key={room.id} player={props.player} room={room} tryJoinRoom={tryJoinRoom} />)}\r\n        </div>\r\n    );\r\n}","import { IGameState } from '../../../go-common/IGameState';\r\nimport IPlayer from '../../../go-common/IPlayer';\r\nimport { PlayResult } from '../../../go-common/IPlayResult';\r\nimport IRoom from '../../../go-common/IRoom';\r\n\r\nconst POLL_INTERVAL = 1000;\r\n\r\nexport default class GameController {\r\n\r\n    handlers: ((rooms: IGameState) => void)[];\r\n    timeoutHandle: number;\r\n    currentGameState?: IGameState;\r\n\r\n    constructor(private urlBase: string, public room: IRoom, public player: IPlayer) {\r\n        this.handlers = [];\r\n        this.timeoutHandle= -1;\r\n    }\r\n\r\n    bindHandler(handler: (rooms: IGameState) => void) {\r\n        this.handlers.push(handler);\r\n        if(this.handlers.length === 1){\r\n            this.startUpdateLoop();\r\n        }\r\n    }\r\n\r\n    startUpdateLoop() {\r\n        this.pollRoom();\r\n    }\r\n\r\n    pollRoom(): void {\r\n        fetch(`${this.urlBase}/room/${this.room.id}/game?lastMoveId=${this.currentGameState?.state ?? -1}&playerId=${this.player.id}&playerSecret=${encodeURIComponent(this.player.secret??'')}`, { method: 'GET' })\r\n        .then(async (res) => {\r\n            if(!res.ok) {\r\n                console.error('Bad response during game poll: ' + res.status + ' ' + await res.text());\r\n            }\r\n            if(res.status === 200)\r\n            {\r\n                const gameState = (await res.json()) as IGameState;\r\n                this.currentGameState = gameState;\r\n                this.handlers.forEach((handler) => handler(gameState));\r\n            }\r\n\r\n            this.timeoutHandle = window.setTimeout(()=>this.startUpdateLoop(), POLL_INTERVAL);\r\n        });\r\n    }\r\n    async tryPlayMove(x: number, y: number): Promise<PlayResult> {\r\n        return fetch(`${this.urlBase}/room/${this.room.id}/game/play?x=${x}&y=${y}&playerId=${this.player.id}&playerSecret=${encodeURIComponent(this.player.secret??'')}`, \r\n            { \r\n                method: 'POST'\r\n            })\r\n            .then(async res => {\r\n                if(!res.ok) {\r\n                    const errorText = 'Bad response during play move: ' + res.status + ' ' + await res.text();\r\n                    console.error(errorText);\r\n                    return Promise.reject(errorText);\r\n                }\r\n                const result = (await res.json()) as PlayResult;\r\n                if(result.success) {\r\n                    this.currentGameState = result.state;\r\n                    this.handlers.forEach((handler) => handler(result.state));\r\n\r\n                }\r\n                return result;\r\n            });\r\n    }\r\n\r\n    destroy() {\r\n        clearTimeout(this.timeoutHandle);\r\n    }\r\n}","import { IGameRules } from '../../../go-common/IGameRules';\r\nimport IPlayer from '../../../go-common/IPlayer';\r\nimport IRoom from '../../../go-common/IRoom';\r\nimport {Optional} from '../../../go-common/MappedTypes';\r\n\r\nconst POLL_INTERVAL = 1000;\r\n\r\nexport default class RoomPollController {\r\n\r\n    handlers: ((rooms: IRoom) => void)[];\r\n    timeoutHandle: number;\r\n\r\n    constructor(private urlBase: string, private room: IRoom, public player: IPlayer) {\r\n        this.handlers = [];\r\n        this.timeoutHandle= -1;\r\n    }\r\n\r\n    bindHandler(handler: (rooms: IRoom) => void) {\r\n        this.handlers.push(handler);\r\n        if(this.handlers.length === 1){\r\n            this.startUpdateLoop();\r\n        }\r\n    }\r\n\r\n    startUpdateLoop() {\r\n        this.pollRoom();\r\n    }\r\n\r\n    pollRoom(): void {\r\n        fetch(`${this.urlBase}/room/${this.room.id}`, { method: 'GET' })\r\n        .then(async (res) => {\r\n            if(!res.ok) {\r\n                console.error('Bad response during room poll: ' + res.status + ' ' + await res.text());\r\n            }\r\n            const rooms = (await res.json()) as IRoom;\r\n            this.handlers.forEach((handler) => handler(rooms));\r\n            \r\n            this.timeoutHandle = window.setTimeout(()=>this.startUpdateLoop(), POLL_INTERVAL);\r\n        });\r\n    }\r\n\r\n    async tryChangeRules(rules: Optional<IGameRules>): Promise<IRoom> {\r\n        return fetch(`${this.urlBase}/room/${this.room.id}?playerId=${this.player.id}&playerSecret=${encodeURIComponent(this.player.secret??'')}`, \r\n            { \r\n                method: 'POST', \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }, body: JSON.stringify(rules) \r\n            })\r\n            .then(async res => {\r\n                if(!res.ok) {\r\n                    const errorText = 'Bad response during rule update: ' + res.status + ' ' + await res.text();\r\n                    console.error(errorText);\r\n                    return Promise.reject(errorText);\r\n                }\r\n                return (await res.json()) as IRoom;\r\n            });\r\n    }\r\n    async tryStartGame(): Promise<IRoom> {\r\n        return fetch(`${this.urlBase}/room/${this.room.id}/start?playerId=${this.player.id}&playerSecret=${encodeURIComponent(this.player.secret??'')}`, \r\n            { \r\n                method: 'POST',\r\n            })\r\n            .then(async res => {\r\n                if(!res.ok) {\r\n                    const errorText = 'Bad response during start request: ' + res.status + ' ' + await res.text();\r\n                    console.error(errorText);\r\n                    return Promise.reject(errorText);\r\n                }\r\n                return (await res.json()) as IRoom;\r\n            });\r\n    }\r\n\r\n    destroy() {\r\n        clearTimeout(this.timeoutHandle);\r\n    }\r\n}","import React from \"react\";\r\nimport { IGameRules } from \"../../../../go-common/IGameRules\";\r\nimport IPlayer from \"../../../../go-common/IPlayer\";\r\nimport IRoom from \"../../../../go-common/IRoom\";\r\nimport { Optional } from \"../../../../go-common/MappedTypes\";\r\nimport GameController from \"../../Rest/GameController\";\r\nimport RoomPollController from \"../../Rest/RoomPollController\";\r\nimport './LobbyComponent.css';\r\n\r\nexport default function LobbyComponent(props: { baseUrl: string, player: IPlayer, room: IRoom, onGameStateChanged: (state: GameController) => void}) {\r\n    const roomPollControl = React.useRef<null | RoomPollController>(null);\r\n    const [room, setRoom] = React.useState<IRoom>(props.room);\r\n    const [waitingForServer, setWaitingForServer] = React.useState<boolean>(false);\r\n\r\n    const isHost = room.players[0].id === props.player.id;\r\n\r\n    if(room.game !== undefined) {\r\n        props.onGameStateChanged(new GameController(props.baseUrl, room, props.player));\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (roomPollControl.current === null) {\r\n            roomPollControl.current = new RoomPollController(props.baseUrl, props.room, props.player);\r\n            roomPollControl.current.bindHandler(setRoom);\r\n        }\r\n        return () => { roomPollControl.current?.destroy(); roomPollControl.current = null; }\r\n    }, []);\r\n\r\n    function tryUpdateRule(rule: Optional<IGameRules>) {\r\n        setWaitingForServer(true);\r\n        (roomPollControl.current as RoomPollController).tryChangeRules(rule).then(room => {\r\n            setWaitingForServer(false);\r\n            setRoom(room);\r\n        });\r\n    }\r\n\r\n    function tryStartGame(){\r\n        setWaitingForServer(true);\r\n        (roomPollControl.current as RoomPollController).tryStartGame()\r\n            .then(room => {\r\n                setWaitingForServer(false);\r\n                props.onGameStateChanged(new GameController(props.baseUrl, room, props.player));\r\n            });\r\n    }\r\n\r\n    function getRuleType(value: any): string {\r\n        if(typeof(value) === \"number\") { return 'number'; }\r\n        if(typeof(value) === \"boolean\") { return 'checkbox'; }\r\n        return 'text';\r\n    }\r\n\r\n    function getChecked(value: any): boolean|undefined {\r\n        if(typeof(value) === \"boolean\") { return value; }\r\n        return undefined;\r\n    }\r\n\r\n    function getValue(value: any) {\r\n        if(typeof(value) === \"boolean\") { return undefined; }\r\n        return value;\r\n    }\r\n\r\n    function getChangedValue(elem: HTMLInputElement, value: any): any {\r\n        if(typeof(value) === 'boolean') return elem.checked;\r\n        if(typeof(value) === 'number') return elem.valueAsNumber;\r\n        return elem.value;\r\n    }\r\n\r\n    const ruleItems: JSX.Element[] = [];\r\n    for (const key in room.rules) {\r\n        if (room.rules.hasOwnProperty(key)) {\r\n            ruleItems.push(<div key={key} className='rule'>\r\n                <label>{key}:</label>\r\n                <input disabled={!isHost || waitingForServer} type={getRuleType((room.rules as any)[key])} checked={getChecked((room.rules as any)[key])} value={getValue((room.rules as any)[key])} onChange={e => tryUpdateRule({ [key]: getChangedValue(e.target, (room.rules as any)[key]) })} />\r\n            </div>);\r\n        }\r\n    }\r\n\r\n    return <div className='lobby-component'>\r\n        <div>{room.name}</div>\r\n        {isHost? <button className='submitButon' onClick={tryStartGame}>Start Game</button>:<div className='wait-text'>Waiting for host to start...</div>}\r\n        <div className='flex row left-align'>\r\n            <div className='flex col collist rule-list'>\r\n                <div>Rules:</div>\r\n                {ruleItems}\r\n            </div>\r\n            <div className='flex col collist'>\r\n                <div>Players:</div>\r\n                <ul>\r\n                    {room.players.map(p => <li key={p.id}>{p.name}</li>)}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n}","import IPlayer from \"../../../../go-common/IPlayer\";\r\nimport { gradientColors } from \"./InGameComponent\";\r\nimport './PlayerInfoComponent.css';\r\n\r\nexport default function PlayerInfoComponent(props: {player: IPlayer, captures:number, isMe: boolean, index: number}) {\r\n    return <div className='player-wrapper'>\r\n        <div className='player-name'>\r\n            {props.player.name}\r\n            {props.isMe ? <span className='is-you'> (You)</span> : <></>}\r\n            <div>Playing {gradientColors[props.index].name}</div>\r\n            <div>Captures: {props.captures}</div>\r\n        </div>\r\n    </div>;\r\n}","import { IGameState } from \"../../../../go-common/IGameState\";\r\nimport GameController from \"../../Rest/GameController\";\r\nimport PlayerInfoComponent from \"./PlayerInfoComponent\";\r\n\r\nexport default function GameInfoComponent(props: { gameState: IGameState, gsc: GameController, myTurn: boolean })\r\n{\r\n    const room = props.gsc.room;\r\n    return (\r\n        <div className='flex col' style={{ textAlign:'left' }}>\r\n            {props.myTurn ? <div className='my-turn'>Your Turn</div> : <div className='waiting-for-players'>Waiting for other players</div>}\r\n            <div>Players:</div>\r\n            {room.players.map((p, i) => <PlayerInfoComponent key={p.id} captures={props.gameState.captureCounts[i]} index={i} player={p} isMe={p.id === props.gsc.player.id} />)}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default function SingleCellComponent(props: { isIllegal: boolean, isPendingMove: boolean, value: number, myTurn: boolean, myPlayerIndex: number, x: number, y: number, onClick: (x: number, y: number) => void }){\r\n    const [hover, setHover] = React.useState(false);\r\n\r\n    let displayCell = props.value;\r\n    let isPreview = false;\r\n    let opacity = displayCell === -1 ? 0 : 1;\r\n    if(hover && props.myTurn && displayCell === -1) {\r\n        displayCell = props.myPlayerIndex;\r\n        isPreview = true;\r\n        opacity = 0.5;\r\n    }\r\n    if(props.isPendingMove && props.value === -1) {\r\n        displayCell = props.myPlayerIndex;\r\n        isPreview = true;\r\n        opacity = 0.75;\r\n    }\r\n\r\n    if(props.isIllegal) {\r\n        return <g transform='scale(0.125)'>\r\n            <path d='M 2 1 L 4 3 L 6 1 L 7 2 L 5 4 L 7 6 L 6 7 L 4 5 L 2 7 L 1 6 L 3 4 L 1 2 Z' fill='#f44' stroke='black' vectorEffect='non-scaling-stroke' />\r\n        </g>;\r\n    }\r\n\r\n    return <g>\r\n        <circle \r\n            cx={0.5} \r\n            cy={0.5} \r\n            r={0.4} \r\n            fill={displayCell === -1 ? 'white' : `url('#g${displayCell}')`} \r\n            opacity={opacity}\r\n            onMouseEnter={e => setHover(true)}\r\n            onMouseLeave={e => setHover(false)}\r\n            onClick={e => { if(props.myTurn) props.onClick(props.x, props.y); }}\r\n        />\r\n    </g>\r\n}","import React from \"react\";\r\nimport IPlayer from \"../../../../go-common/IPlayer\";\r\nimport GameController from \"../../Rest/GameController\";\r\nimport GameInfoComponent from \"./GameInfoComponent\";\r\nimport './InGameComponent.css';\r\nimport SingleCellComponent from \"./SingleCellComponent\";\r\n\r\nexport const gradientColors:{ from: string, to: string, name: string }[] = [\r\n    { from: \"#444\", to: \"#111\", name:'black' },\r\n    { from: \"#FFF\", to: \"#ccc\", name:'white' },\r\n    { from: \"#F66\", to: \"#600\", name:'red' },\r\n    { from: \"#6F6\", to: \"#060\", name:'green' },\r\n    { from: \"#66F\", to: \"#006\", name:'blue' },\r\n];\r\n\r\nexport default function InGameComponent(props: { gameController: GameController, player: IPlayer }) {\r\n    const [gameState, setGameState] = React.useState(props.gameController.currentGameState);\r\n    const [waitingForServer, setWaitingForServer] = React.useState(false);\r\n\r\n    const rules = props.gameController.room.rules;\r\n    const playerIndex = props.gameController.room.players.findIndex(p => p.id === props.player.id);\r\n    const myTurn = gameState?.myTurn ?? false;\r\n\r\n    React.useEffect(() => {\r\n        props.gameController.bindHandler(setGameState);\r\n        return ()=>props.gameController.destroy();\r\n    }, [props.gameController]);\r\n\r\n    const boardMarkings:JSX.Element[] = [];\r\n\r\n    for (let i = 0; i < rules.boardSize; i++) {\r\n        boardMarkings.push(<line key={`h${i}`} x1={0.5} x2={rules.boardSize - 0.5} y1={i + 0.5} y2={i + 0.5} stroke='black' strokeWidth='1' vectorEffect=\"non-scaling-stroke\" />);\r\n        boardMarkings.push(<line key={`v${i}`} y1={0.5} y2={rules.boardSize - 0.5} x1={i + 0.5} x2={i + 0.5} stroke='black' strokeWidth='1' vectorEffect=\"non-scaling-stroke\" />);\r\n    }\r\n\r\n    for(let starPoint = 0; starPoint < 9; starPoint++) {\r\n        const dx = starPoint % 3;\r\n        const dy = Math.floor(starPoint / 3);\r\n        const cx = dx === 0 ? 3 : dx === 1 ? Math.floor(rules.boardSize / 2) : rules.boardSize - 4;\r\n        const cy = dy === 0 ? 3 : dy === 1 ? Math.floor(rules.boardSize / 2) : rules.boardSize - 4;\r\n\r\n        boardMarkings.push(<circle key={`s${starPoint}`} cx={cx + 0.5} cy={cy + 0.5} r={.15} fill='black' />);\r\n    }\r\n\r\n    const gradients: JSX.Element[] = [];\r\n    for(let i = 0; i < gradientColors.length; i++){\r\n        gradients.push(\r\n            <radialGradient key={'g'+i} id={'g'+i} cx='70%' cy='30%' r='120%'>\r\n                <stop offset='0' stopColor={gradientColors[i].from} />\r\n                <stop offset='80%' stopColor={gradientColors[i].to} />\r\n            </radialGradient>\r\n        );\r\n    }\r\n\r\n    function handleCellClicked(x: number, y: number) {\r\n        if(waitingForServer) return;\r\n\r\n        setWaitingForServer(true);\r\n        props.gameController.tryPlayMove(x, y)\r\n            .then(r => {\r\n                setWaitingForServer(false);\r\n                if(!r.success) {\r\n                    alert(\"Can't play here! \" + r.reason);\r\n                }\r\n            });\r\n    }\r\n\r\n    return <div className='flex row'>\r\n        <div className='flex column game'>\r\n            <svg viewBox={'0 0 ' + rules.boardSize + ' ' + rules.boardSize}>\r\n                <defs>\r\n                    {gradients}\r\n                </defs>\r\n                {boardMarkings}\r\n                {gameState?.cells.map((col, c) => \r\n                    <g key={c} transform={`translate(${c}, 0)`}>\r\n                        {col.map((cell, r) =>\r\n                            <g key={r} transform={`translate(0, ${r})`} viewBox='0 0 1 1'>\r\n                                <SingleCellComponent \r\n                                    isIllegal={(gameState?.illegalMoves?.findIndex(m => m.x === c && m.y === r) ?? -1) !== -1}\r\n                                    isPendingMove={gameState?.previewMove?.x === c && gameState?.previewMove?.y === r}\r\n                                    value={cell}\r\n                                    myTurn={myTurn}\r\n                                    myPlayerIndex={playerIndex}\r\n                                    x={c}\r\n                                    y={r}\r\n                                    onClick={handleCellClicked} />\r\n                            </g>\r\n                        )}\r\n                    </g>\r\n                )}\r\n            </svg>\r\n        </div>\r\n        <div className='flex column game-info'>\r\n            {gameState === undefined ? <></> : <GameInfoComponent myTurn={gameState?.myTurn ?? false} gameState={gameState} gsc={props.gameController} />}\r\n        </div>\r\n    </div>;\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CreatePlayerComponent from './Components/CreatePlayer/CreatePlayerComponent';\nimport KeepAlivePlayer from './Rest/KeepAlivePlayer';\nimport FindRoomComponent from './Components/FindRoom/FindRoomComponent';\nimport LobbyComponent from './Components/Lobby/LobbyCompontent';\nimport GameController from './Rest/GameController';\nimport InGameComponent from './Components/InGame/InGameComponent';\nimport IRoom from '../../go-common/IRoom'\n\nlet baseUrl = window.location.href.indexOf('localhost:3000') === -1 ? '' : 'http://localhost:8080';\n\nfunction App() {\n  const [playerKeepAlive, setPlayer] = React.useState<KeepAlivePlayer | null>(null);\n  const [room, setRoom] = React.useState<IRoom | null>(null);\n  const [gameStateController, setGameStateController] = React.useState<GameController | null>(null);\n\n  let contentElement: JSX.Element|null = null;\n  if(playerKeepAlive === null) {\n    contentElement = <CreatePlayerComponent baseUrl={baseUrl} onPlayerCreated={p => setPlayer(new KeepAlivePlayer(baseUrl, p))} />;\n  }\n  else if (room === null) {\n    contentElement = <FindRoomComponent baseUrl={baseUrl} player={playerKeepAlive.player} onJoinedRoom={setRoom} />\n  }\n  else if(gameStateController === null) {\n    contentElement = <LobbyComponent baseUrl={baseUrl} player={playerKeepAlive.player} room={room} onGameStateChanged={setGameStateController} />;\n  }\n  else {  \n    contentElement = <InGameComponent gameController={gameStateController} player={playerKeepAlive.player} />\n  }\n\n  return <div className='App'>\n    {contentElement}\n  </div>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}